{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./FunActivitiesLanding.css';import Navbar from'../components/Navbar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const options=[{value:'outdoor',label:'Outdoor Activities'},{value:'indoor',label:'Indoor Activities'},{value:'restaurants',label:'Restaurants'},{value:'entertainment',label:'Entertainment'}];export default function FunActivitiesLanding(){const navigate=useNavigate();const[selectedOption,setSelectedOption]=useState('');const[spinning,setSpinning]=useState(false);const handleSpin=()=>{if(spinning)return;setSpinning(true);let currentIndex=0;// Cycle through the options every 100ms\nconst interval=setInterval(()=>{currentIndex=(currentIndex+1)%options.length;setSelectedOption(options[currentIndex].label);},100);// Stop after 2 seconds and choose a random option\nsetTimeout(()=>{clearInterval(interval);const randomIndex=Math.floor(Math.random()*options.length);setSelectedOption(options[randomIndex].label);setSpinning(false);// After a short delay, navigate to the results page with the selected option\nsetTimeout(()=>{navigate(\"/fun-activities/results?category=\".concat(options[randomIndex].value));},500);},2000);};return/*#__PURE__*/_jsxs(\"div\",{className:\"landing-container\",children:[/*#__PURE__*/_jsx(Navbar,{onSignOut:()=>{localStorage.removeItem('bacshotsUser');navigate('/signin');}}),/*#__PURE__*/_jsxs(\"div\",{className:\"landing-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"What are you interested in?\"}),/*#__PURE__*/_jsx(\"div\",{className:\"slot-machine \".concat(spinning?'spinning':''),onClick:handleSpin,children:/*#__PURE__*/_jsx(\"span\",{className:\"slot-text\",children:selectedOption||'Click to Spin'})})]})]});}","map":{"version":3,"names":["React","useState","useNavigate","Navbar","jsx","_jsx","jsxs","_jsxs","options","value","label","FunActivitiesLanding","navigate","selectedOption","setSelectedOption","spinning","setSpinning","handleSpin","currentIndex","interval","setInterval","length","setTimeout","clearInterval","randomIndex","Math","floor","random","concat","className","children","onSignOut","localStorage","removeItem","onClick"],"sources":["C:/Users/melkote/Downloads/ActuallyAlmostFinalizedWaite-main1/ActuallyAlmostFinalizedWaite-main/client/src/pages/FunActivitiesLanding.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './FunActivitiesLanding.css';\nimport Navbar from '../components/Navbar';\n\nconst options = [\n  { value: 'outdoor', label: 'Outdoor Activities' },\n  { value: 'indoor', label: 'Indoor Activities' },\n  { value: 'restaurants', label: 'Restaurants' },\n  { value: 'entertainment', label: 'Entertainment' },\n];\n\nexport default function FunActivitiesLanding() {\n  const navigate = useNavigate();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [spinning, setSpinning] = useState(false);\n\n  const handleSpin = () => {\n    if (spinning) return;\n    setSpinning(true);\n    let currentIndex = 0;\n    // Cycle through the options every 100ms\n    const interval = setInterval(() => {\n      currentIndex = (currentIndex + 1) % options.length;\n      setSelectedOption(options[currentIndex].label);\n    }, 100);\n\n    // Stop after 2 seconds and choose a random option\n    setTimeout(() => {\n      clearInterval(interval);\n      const randomIndex = Math.floor(Math.random() * options.length);\n      setSelectedOption(options[randomIndex].label);\n      setSpinning(false);\n      // After a short delay, navigate to the results page with the selected option\n      setTimeout(() => {\n        navigate(`/fun-activities/results?category=${options[randomIndex].value}`);\n      }, 500);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"landing-container\">\n      <Navbar onSignOut={() => {\n        localStorage.removeItem('bacshotsUser');\n        navigate('/signin');\n      }} />\n      <div className=\"landing-content\">\n        <h1>What are you interested in?</h1>\n        <div className={`slot-machine ${spinning ? 'spinning' : ''}`} onClick={handleSpin}>\n          <span className=\"slot-text\">{selectedOption || 'Click to Spin'}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,4BAA4B,CACnC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,OAAO,CAAG,CACd,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,oBAAqB,CAAC,CACjD,CAAED,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,mBAAoB,CAAC,CAC/C,CAAED,KAAK,CAAE,aAAa,CAAEC,KAAK,CAAE,aAAc,CAAC,CAC9C,CAAED,KAAK,CAAE,eAAe,CAAEC,KAAK,CAAE,eAAgB,CAAC,CACnD,CAED,cAAe,SAAS,CAAAC,oBAAoBA,CAAA,CAAG,CAC7C,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAE/C,KAAM,CAAAgB,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIF,QAAQ,CAAE,OACdC,WAAW,CAAC,IAAI,CAAC,CACjB,GAAI,CAAAE,YAAY,CAAG,CAAC,CACpB;AACA,KAAM,CAAAC,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCF,YAAY,CAAG,CAACA,YAAY,CAAG,CAAC,EAAIV,OAAO,CAACa,MAAM,CAClDP,iBAAiB,CAACN,OAAO,CAACU,YAAY,CAAC,CAACR,KAAK,CAAC,CAChD,CAAC,CAAE,GAAG,CAAC,CAEP;AACAY,UAAU,CAAC,IAAM,CACfC,aAAa,CAACJ,QAAQ,CAAC,CACvB,KAAM,CAAAK,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGnB,OAAO,CAACa,MAAM,CAAC,CAC9DP,iBAAiB,CAACN,OAAO,CAACgB,WAAW,CAAC,CAACd,KAAK,CAAC,CAC7CM,WAAW,CAAC,KAAK,CAAC,CAClB;AACAM,UAAU,CAAC,IAAM,CACfV,QAAQ,qCAAAgB,MAAA,CAAqCpB,OAAO,CAACgB,WAAW,CAAC,CAACf,KAAK,CAAE,CAAC,CAC5E,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,mBACEF,KAAA,QAAKsB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCzB,IAAA,CAACF,MAAM,EAAC4B,SAAS,CAAEA,CAAA,GAAM,CACvBC,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CACvCrB,QAAQ,CAAC,SAAS,CAAC,CACrB,CAAE,CAAE,CAAC,cACLL,KAAA,QAAKsB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BzB,IAAA,OAAAyB,QAAA,CAAI,6BAA2B,CAAI,CAAC,cACpCzB,IAAA,QAAKwB,SAAS,iBAAAD,MAAA,CAAkBb,QAAQ,CAAG,UAAU,CAAG,EAAE,CAAG,CAACmB,OAAO,CAAEjB,UAAW,CAAAa,QAAA,cAChFzB,IAAA,SAAMwB,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEjB,cAAc,EAAI,eAAe,CAAO,CAAC,CACnE,CAAC,EACH,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}