{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import{useSearchParams}from'react-router-dom';import'./FunActivitiesResults.css';import Navbar from'../components/Navbar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function FunActivitiesResults(){const[searchParams,setSearchParams]=useSearchParams();const initialCategory=searchParams.get('category')||'';const[category,setCategory]=useState(initialCategory);const[location,setLocation]=useState(null);const[places,setPlaces]=useState([]);const[loading,setLoading]=useState(false);const mapRef=useRef(null);const[map,setMap]=useState(null);const[markers,setMarkers]=useState([]);// Define available categories\nconst categories=[{value:'outdoor',label:'Outdoor Activities'},{value:'indoor',label:'Indoor Activities'},{value:'restaurants',label:'Restaurants'},{value:'entertainment',label:'Entertainment'}];// Helper to get category label\nconst getCategoryLabel=catValue=>{const found=categories.find(cat=>cat.value===catValue);return found?found.label:'Fun Activities';};const[currentLabel,setCurrentLabel]=useState(getCategoryLabel(initialCategory));// Update header label and URL query when category changes\nuseEffect(()=>{setCurrentLabel(getCategoryLabel(category));setSearchParams({category});},[category,setSearchParams]);// Get user's current location\nuseEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(pos=>setLocation({lat:pos.coords.latitude,lng:pos.coords.longitude}),err=>{console.error(err);// Fallback location (rough center of the US)\nsetLocation({lat:39.8283,lng:-98.5795});});}else{setLocation({lat:39.8283,lng:-98.5795});}},[]);// Helper function to load the Google Maps JavaScript API using the client-safe key\nconst loadGoogleMapsScript=()=>{return new Promise((resolve,reject)=>{if(window.google&&window.google.maps){resolve();}else{const existingScript=document.getElementById('googleMaps');if(existingScript){existingScript.addEventListener('load',resolve);return;}const script=document.createElement('script');script.id='googleMaps';// Use the client-safe key stored in your React environment variables\nconst clientKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;script.src=\"https://maps.googleapis.com/maps/api/js?key=\".concat(clientKey,\"&libraries=places\");script.async=true;script.defer=true;script.onload=()=>resolve();script.onerror=()=>reject('Google Maps script failed to load.');document.body.appendChild(script);}});};// Load Google Maps script and initialize the map when location is available\nuseEffect(()=>{if(location){loadGoogleMapsScript().then(()=>{if(mapRef.current){const initMap=new window.google.maps.Map(mapRef.current,{center:location,zoom:14});setMap(initMap);}}).catch(err=>console.error(err));}},[location]);// Fetch places from the server once location, category, and map are available\nuseEffect(()=>{if(!location||!category||!map)return;setLoading(true);// Clear any existing markers\nmarkers.forEach(marker=>marker.setMap(null));setMarkers([]);fetch(\"/api/places?category=\".concat(category,\"&lat=\").concat(location.lat,\"&lng=\").concat(location.lng)).then(res=>res.json()).then(data=>{setLoading(false);if(data.results){setPlaces(data.results);// Create markers for each place\nconst newMarkers=data.results.map(place=>{if(place.geometry&&place.geometry.location){const pos={lat:typeof place.geometry.location.lat==='function'?place.geometry.location.lat():place.geometry.location.lat,lng:typeof place.geometry.location.lng==='function'?place.geometry.location.lng():place.geometry.location.lng};return new window.google.maps.Marker({position:pos,map:map,title:place.name});}return null;}).filter(marker=>marker!==null);setMarkers(newMarkers);// Adjust map bounds to show all markers\nif(data.results.length>0){const bounds=new window.google.maps.LatLngBounds();data.results.forEach(place=>{if(place.geometry&&place.geometry.location){const pos={lat:typeof place.geometry.location.lat==='function'?place.geometry.location.lat():place.geometry.location.lat,lng:typeof place.geometry.location.lng==='function'?place.geometry.location.lng():place.geometry.location.lng};bounds.extend(pos);}});map.fitBounds(bounds);}}else{setPlaces([]);}}).catch(err=>{console.error('Error fetching places:',err);setLoading(false);});},[category,location,map]);return/*#__PURE__*/_jsxs(\"div\",{className:\"fun-activities-results-container\",children:[/*#__PURE__*/_jsx(Navbar,{onSignOut:()=>{localStorage.removeItem('bacshotsUser');window.location.href='/signin';}}),/*#__PURE__*/_jsxs(\"div\",{className:\"fun-activities-results-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentLabel}),/*#__PURE__*/_jsx(\"div\",{className:\"category-selector-manual\",children:/*#__PURE__*/_jsxs(\"select\",{value:category,onChange:e=>setCategory(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a category\"}),categories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat.value,children:cat.label},cat.value))]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-layout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"results-list\",children:/*#__PURE__*/_jsx(\"div\",{className:\"results-items\",children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Searching for activities...\"}):places.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No activities found. Try a different category.\"}):places.map(place=>/*#__PURE__*/_jsxs(\"div\",{className:\"place-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:place.name}),/*#__PURE__*/_jsx(\"p\",{children:place.formatted_address||place.vicinity})]},place.place_id))})}),/*#__PURE__*/_jsx(\"div\",{className:\"results-map\",children:/*#__PURE__*/_jsx(\"div\",{className:\"map-container\",ref:mapRef,children:!location&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading map...\"})})})]})]})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","useSearchParams","Navbar","jsx","_jsx","jsxs","_jsxs","FunActivitiesResults","searchParams","setSearchParams","initialCategory","get","category","setCategory","location","setLocation","places","setPlaces","loading","setLoading","mapRef","map","setMap","markers","setMarkers","categories","value","label","getCategoryLabel","catValue","found","find","cat","currentLabel","setCurrentLabel","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","err","console","error","loadGoogleMapsScript","Promise","resolve","reject","window","google","maps","existingScript","document","getElementById","addEventListener","script","createElement","id","clientKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","src","concat","async","defer","onload","onerror","body","appendChild","then","current","initMap","Map","center","zoom","catch","forEach","marker","fetch","res","json","data","results","newMarkers","place","geometry","Marker","position","title","name","filter","length","bounds","LatLngBounds","extend","fitBounds","className","children","onSignOut","localStorage","removeItem","href","onChange","e","target","disabled","formatted_address","vicinity","place_id","ref"],"sources":["C:/Users/melkote/Downloads/ActuallyAlmostFinalizedWaite-main1/ActuallyAlmostFinalizedWaite-main/client/src/pages/FunActivitiesResults.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './FunActivitiesResults.css';\nimport Navbar from '../components/Navbar';\n\nexport default function FunActivitiesResults() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialCategory = searchParams.get('category') || '';\n  const [category, setCategory] = useState(initialCategory);\n  const [location, setLocation] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n\n  // Define available categories\n  const categories = [\n    { value: 'outdoor', label: 'Outdoor Activities' },\n    { value: 'indoor', label: 'Indoor Activities' },\n    { value: 'restaurants', label: 'Restaurants' },\n    { value: 'entertainment', label: 'Entertainment' },\n  ];\n\n  // Helper to get category label\n  const getCategoryLabel = (catValue) => {\n    const found = categories.find((cat) => cat.value === catValue);\n    return found ? found.label : 'Fun Activities';\n  };\n\n  const [currentLabel, setCurrentLabel] = useState(getCategoryLabel(initialCategory));\n\n  // Update header label and URL query when category changes\n  useEffect(() => {\n    setCurrentLabel(getCategoryLabel(category));\n    setSearchParams({ category });\n  }, [category, setSearchParams]);\n\n  // Get user's current location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (pos) => setLocation({ lat: pos.coords.latitude, lng: pos.coords.longitude }),\n        (err) => {\n          console.error(err);\n          // Fallback location (rough center of the US)\n          setLocation({ lat: 39.8283, lng: -98.5795 });\n        }\n      );\n    } else {\n      setLocation({ lat: 39.8283, lng: -98.5795 });\n    }\n  }, []);\n\n  // Helper function to load the Google Maps JavaScript API using the client-safe key\n  const loadGoogleMapsScript = () => {\n    return new Promise((resolve, reject) => {\n      if (window.google && window.google.maps) {\n        resolve();\n      } else {\n        const existingScript = document.getElementById('googleMaps');\n        if (existingScript) {\n          existingScript.addEventListener('load', resolve);\n          return;\n        }\n        const script = document.createElement('script');\n        script.id = 'googleMaps';\n        // Use the client-safe key stored in your React environment variables\n        const clientKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${clientKey}&libraries=places`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => resolve();\n        script.onerror = () => reject('Google Maps script failed to load.');\n        document.body.appendChild(script);\n      }\n    });\n  };\n\n  // Load Google Maps script and initialize the map when location is available\n  useEffect(() => {\n    if (location) {\n      loadGoogleMapsScript()\n        .then(() => {\n          if (mapRef.current) {\n            const initMap = new window.google.maps.Map(mapRef.current, {\n              center: location,\n              zoom: 14,\n            });\n            setMap(initMap);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [location]);\n\n  // Fetch places from the server once location, category, and map are available\n  useEffect(() => {\n    if (!location || !category || !map) return;\n    setLoading(true);\n\n    // Clear any existing markers\n    markers.forEach((marker) => marker.setMap(null));\n    setMarkers([]);\n\n    fetch(`/api/places?category=${category}&lat=${location.lat}&lng=${location.lng}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.results) {\n          setPlaces(data.results);\n\n          // Create markers for each place\n          const newMarkers = data.results\n            .map((place) => {\n              if (place.geometry && place.geometry.location) {\n                const pos = {\n                  lat:\n                    typeof place.geometry.location.lat === 'function'\n                      ? place.geometry.location.lat()\n                      : place.geometry.location.lat,\n                  lng:\n                    typeof place.geometry.location.lng === 'function'\n                      ? place.geometry.location.lng()\n                      : place.geometry.location.lng,\n                };\n                return new window.google.maps.Marker({\n                  position: pos,\n                  map: map,\n                  title: place.name,\n                });\n              }\n              return null;\n            })\n            .filter((marker) => marker !== null);\n          setMarkers(newMarkers);\n\n          // Adjust map bounds to show all markers\n          if (data.results.length > 0) {\n            const bounds = new window.google.maps.LatLngBounds();\n            data.results.forEach((place) => {\n              if (place.geometry && place.geometry.location) {\n                const pos = {\n                  lat:\n                    typeof place.geometry.location.lat === 'function'\n                      ? place.geometry.location.lat()\n                      : place.geometry.location.lat,\n                  lng:\n                    typeof place.geometry.location.lng === 'function'\n                      ? place.geometry.location.lng()\n                      : place.geometry.location.lng,\n                };\n                bounds.extend(pos);\n              }\n            });\n            map.fitBounds(bounds);\n          }\n        } else {\n          setPlaces([]);\n        }\n      })\n      .catch((err) => {\n        console.error('Error fetching places:', err);\n        setLoading(false);\n      });\n  }, [category, location, map]);\n\n  return (\n    <div className=\"fun-activities-results-container\">\n      <Navbar\n        onSignOut={() => {\n          localStorage.removeItem('bacshotsUser');\n          window.location.href = '/signin';\n        }}\n      />\n      <div className=\"fun-activities-results-content\">\n        <div className=\"results-header\">\n          <h2>{currentLabel}</h2>\n          <div className=\"category-selector-manual\">\n            <select value={category} onChange={(e) => setCategory(e.target.value)}>\n              <option value=\"\" disabled>\n                Select a category\n              </option>\n              {categories.map((cat) => (\n                <option key={cat.value} value={cat.value}>\n                  {cat.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"results-layout\">\n          <div className=\"results-list\">\n            <div className=\"results-items\">\n              {loading ? (\n                <p>Searching for activities...</p>\n              ) : places.length === 0 ? (\n                <p>No activities found. Try a different category.</p>\n              ) : (\n                places.map((place) => (\n                  <div key={place.place_id} className=\"place-item\">\n                    <h3>{place.name}</h3>\n                    <p>{place.formatted_address || place.vicinity}</p>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          <div className=\"results-map\">\n            <div className=\"map-container\" ref={mapRef}>\n              {!location && <p>Loading map...</p>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}